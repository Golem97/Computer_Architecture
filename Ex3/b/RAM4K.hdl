// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
   
DMux8Way(in=load, sel=address[0..2], a=loadA, b=loadB, c=loadC, d=loadD, e=loadE, f=loadF, g=loadG, h=loadH);RAM512(in=in, load=loadA, address=address[3..11], out=out1);
RAM512(in=in, load=loadB, address=address[3..11], out=out2);
RAM512(in=in, load=loadC, address=address[3..11], out=out3);
RAM512(in=in, load=loadD, address=address[3..11], out=out4);
RAM512(in=in, load=loadE, address=address[3..11], out=out5);
RAM512(in=in, load=loadF, address=address[3..11], out=out6);
RAM512(in=in, load=loadG, address=address[3..11], out=out7);
RAM512(in=in, load=loadH, address=address[3..11], out=out8);
Mux8Way16(a=out1, b=out2, c=out3, d=out4, e=out5, f=out6, g=out7, h=out8, sel=address[0..2], out=out);
}